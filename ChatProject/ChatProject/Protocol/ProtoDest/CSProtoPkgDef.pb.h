// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSProtoPkgDef.proto

#ifndef PROTOBUF_CSProtoPkgDef_2eproto__INCLUDED
#define PROTOBUF_CSProtoPkgDef_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CSProtoPkgBodyDef.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace CSProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_CSProtoPkgDef_2eproto();
void protobuf_AssignDesc_CSProtoPkgDef_2eproto();
void protobuf_ShutdownFile_CSProtoPkgDef_2eproto();

class CSMsgPkg;

// ===================================================================

class CSMsgPkg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSProtocol.CSMsgPkg) */ {
 public:
  CSMsgPkg();
  virtual ~CSMsgPkg();

  CSMsgPkg(const CSMsgPkg& from);

  inline CSMsgPkg& operator=(const CSMsgPkg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMsgPkg& default_instance();

  void Swap(CSMsgPkg* other);

  // implements Message ----------------------------------------------

  inline CSMsgPkg* New() const { return New(NULL); }

  CSMsgPkg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMsgPkg& from);
  void MergeFrom(const CSMsgPkg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CSMsgPkg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 msgID = 1;
  void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // optional uint32 pkgBodyLen = 2;
  void clear_pkgbodylen();
  static const int kPkgBodyLenFieldNumber = 2;
  ::google::protobuf::uint32 pkgbodylen() const;
  void set_pkgbodylen(::google::protobuf::uint32 value);

  // optional .CSProtocol.CSMsgPkgBody csMsgPkgBody = 3;
  bool has_csmsgpkgbody() const;
  void clear_csmsgpkgbody();
  static const int kCsMsgPkgBodyFieldNumber = 3;
  const ::CSProtocol::CSMsgPkgBody& csmsgpkgbody() const;
  ::CSProtocol::CSMsgPkgBody* mutable_csmsgpkgbody();
  ::CSProtocol::CSMsgPkgBody* release_csmsgpkgbody();
  void set_allocated_csmsgpkgbody(::CSProtocol::CSMsgPkgBody* csmsgpkgbody);

  // @@protoc_insertion_point(class_scope:CSProtocol.CSMsgPkg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 pkgbodylen_;
  ::CSProtocol::CSMsgPkgBody* csmsgpkgbody_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_CSProtoPkgDef_2eproto();
  friend void protobuf_AssignDesc_CSProtoPkgDef_2eproto();
  friend void protobuf_ShutdownFile_CSProtoPkgDef_2eproto();

  void InitAsDefaultInstance();
  static CSMsgPkg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CSMsgPkg

// optional uint32 msgID = 1;
inline void CSMsgPkg::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 CSMsgPkg::msgid() const {
  // @@protoc_insertion_point(field_get:CSProtocol.CSMsgPkg.msgID)
  return msgid_;
}
inline void CSMsgPkg::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CSProtocol.CSMsgPkg.msgID)
}

// optional uint32 pkgBodyLen = 2;
inline void CSMsgPkg::clear_pkgbodylen() {
  pkgbodylen_ = 0u;
}
inline ::google::protobuf::uint32 CSMsgPkg::pkgbodylen() const {
  // @@protoc_insertion_point(field_get:CSProtocol.CSMsgPkg.pkgBodyLen)
  return pkgbodylen_;
}
inline void CSMsgPkg::set_pkgbodylen(::google::protobuf::uint32 value) {
  
  pkgbodylen_ = value;
  // @@protoc_insertion_point(field_set:CSProtocol.CSMsgPkg.pkgBodyLen)
}

// optional .CSProtocol.CSMsgPkgBody csMsgPkgBody = 3;
inline bool CSMsgPkg::has_csmsgpkgbody() const {
  return !_is_default_instance_ && csmsgpkgbody_ != NULL;
}
inline void CSMsgPkg::clear_csmsgpkgbody() {
  if (GetArenaNoVirtual() == NULL && csmsgpkgbody_ != NULL) delete csmsgpkgbody_;
  csmsgpkgbody_ = NULL;
}
inline const ::CSProtocol::CSMsgPkgBody& CSMsgPkg::csmsgpkgbody() const {
  // @@protoc_insertion_point(field_get:CSProtocol.CSMsgPkg.csMsgPkgBody)
  return csmsgpkgbody_ != NULL ? *csmsgpkgbody_ : *default_instance_->csmsgpkgbody_;
}
inline ::CSProtocol::CSMsgPkgBody* CSMsgPkg::mutable_csmsgpkgbody() {
  
  if (csmsgpkgbody_ == NULL) {
    csmsgpkgbody_ = new ::CSProtocol::CSMsgPkgBody;
  }
  // @@protoc_insertion_point(field_mutable:CSProtocol.CSMsgPkg.csMsgPkgBody)
  return csmsgpkgbody_;
}
inline ::CSProtocol::CSMsgPkgBody* CSMsgPkg::release_csmsgpkgbody() {
  // @@protoc_insertion_point(field_release:CSProtocol.CSMsgPkg.csMsgPkgBody)
  
  ::CSProtocol::CSMsgPkgBody* temp = csmsgpkgbody_;
  csmsgpkgbody_ = NULL;
  return temp;
}
inline void CSMsgPkg::set_allocated_csmsgpkgbody(::CSProtocol::CSMsgPkgBody* csmsgpkgbody) {
  delete csmsgpkgbody_;
  csmsgpkgbody_ = csmsgpkgbody;
  if (csmsgpkgbody) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CSProtocol.CSMsgPkg.csMsgPkgBody)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace CSProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSProtoPkgDef_2eproto__INCLUDED
