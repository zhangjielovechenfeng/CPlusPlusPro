// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Chat.proto

#ifndef PROTOBUF_Chat_2eproto__INCLUDED
#define PROTOBUF_Chat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Chat_2eproto();
void protobuf_AssignDesc_Chat_2eproto();
void protobuf_ShutdownFile_Chat_2eproto();

class CS_HEART_BEAT_REQ;
class CS_LOGIN_REQ;
class CS_REGISTER_REQ;
class SC_HEART_BEAT_RSP;
class SC_LOGIN_RSP;
class SC_REGISTER_RSP;

enum Message_ID {
  ERROR_NUM = 0,
  CSID_HEART_BEAT_REQ = 10001,
  SCID_HEART_BEAT_RSP = 10002,
  CSID_LOGIN_REQ = 10003,
  SCID_LOGIN_RSP = 10004,
  CSID_REGISTER_REQ = 10005,
  SCID_REGISTER_RSP = 10006,
  Message_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Message_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Message_ID_IsValid(int value);
const Message_ID Message_ID_MIN = ERROR_NUM;
const Message_ID Message_ID_MAX = SCID_REGISTER_RSP;
const int Message_ID_ARRAYSIZE = Message_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_ID_descriptor();
inline const ::std::string& Message_ID_Name(Message_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_ID_descriptor(), value);
}
inline bool Message_ID_Parse(
    const ::std::string& name, Message_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_ID>(
    Message_ID_descriptor(), name, value);
}
// ===================================================================

class CS_HEART_BEAT_REQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_HEART_BEAT_REQ) */ {
 public:
  CS_HEART_BEAT_REQ();
  virtual ~CS_HEART_BEAT_REQ();

  CS_HEART_BEAT_REQ(const CS_HEART_BEAT_REQ& from);

  inline CS_HEART_BEAT_REQ& operator=(const CS_HEART_BEAT_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_HEART_BEAT_REQ& default_instance();

  void Swap(CS_HEART_BEAT_REQ* other);

  // implements Message ----------------------------------------------

  inline CS_HEART_BEAT_REQ* New() const { return New(NULL); }

  CS_HEART_BEAT_REQ* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_HEART_BEAT_REQ& from);
  void MergeFrom(const CS_HEART_BEAT_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_HEART_BEAT_REQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_HEART_BEAT_REQ)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Chat_2eproto();
  friend void protobuf_AssignDesc_Chat_2eproto();
  friend void protobuf_ShutdownFile_Chat_2eproto();

  void InitAsDefaultInstance();
  static CS_HEART_BEAT_REQ* default_instance_;
};
// -------------------------------------------------------------------

class SC_HEART_BEAT_RSP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HEART_BEAT_RSP) */ {
 public:
  SC_HEART_BEAT_RSP();
  virtual ~SC_HEART_BEAT_RSP();

  SC_HEART_BEAT_RSP(const SC_HEART_BEAT_RSP& from);

  inline SC_HEART_BEAT_RSP& operator=(const SC_HEART_BEAT_RSP& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HEART_BEAT_RSP& default_instance();

  void Swap(SC_HEART_BEAT_RSP* other);

  // implements Message ----------------------------------------------

  inline SC_HEART_BEAT_RSP* New() const { return New(NULL); }

  SC_HEART_BEAT_RSP* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_HEART_BEAT_RSP& from);
  void MergeFrom(const SC_HEART_BEAT_RSP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_HEART_BEAT_RSP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SC_HEART_BEAT_RSP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Chat_2eproto();
  friend void protobuf_AssignDesc_Chat_2eproto();
  friend void protobuf_ShutdownFile_Chat_2eproto();

  void InitAsDefaultInstance();
  static SC_HEART_BEAT_RSP* default_instance_;
};
// -------------------------------------------------------------------

class CS_LOGIN_REQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LOGIN_REQ) */ {
 public:
  CS_LOGIN_REQ();
  virtual ~CS_LOGIN_REQ();

  CS_LOGIN_REQ(const CS_LOGIN_REQ& from);

  inline CS_LOGIN_REQ& operator=(const CS_LOGIN_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_LOGIN_REQ& default_instance();

  void Swap(CS_LOGIN_REQ* other);

  // implements Message ----------------------------------------------

  inline CS_LOGIN_REQ* New() const { return New(NULL); }

  CS_LOGIN_REQ* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_LOGIN_REQ& from);
  void MergeFrom(const CS_LOGIN_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_LOGIN_REQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_LOGIN_REQ)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Chat_2eproto();
  friend void protobuf_AssignDesc_Chat_2eproto();
  friend void protobuf_ShutdownFile_Chat_2eproto();

  void InitAsDefaultInstance();
  static CS_LOGIN_REQ* default_instance_;
};
// -------------------------------------------------------------------

class SC_LOGIN_RSP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LOGIN_RSP) */ {
 public:
  SC_LOGIN_RSP();
  virtual ~SC_LOGIN_RSP();

  SC_LOGIN_RSP(const SC_LOGIN_RSP& from);

  inline SC_LOGIN_RSP& operator=(const SC_LOGIN_RSP& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LOGIN_RSP& default_instance();

  void Swap(SC_LOGIN_RSP* other);

  // implements Message ----------------------------------------------

  inline SC_LOGIN_RSP* New() const { return New(NULL); }

  SC_LOGIN_RSP* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_LOGIN_RSP& from);
  void MergeFrom(const SC_LOGIN_RSP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_LOGIN_RSP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SC_LOGIN_RSP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Chat_2eproto();
  friend void protobuf_AssignDesc_Chat_2eproto();
  friend void protobuf_ShutdownFile_Chat_2eproto();

  void InitAsDefaultInstance();
  static SC_LOGIN_RSP* default_instance_;
};
// -------------------------------------------------------------------

class CS_REGISTER_REQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_REGISTER_REQ) */ {
 public:
  CS_REGISTER_REQ();
  virtual ~CS_REGISTER_REQ();

  CS_REGISTER_REQ(const CS_REGISTER_REQ& from);

  inline CS_REGISTER_REQ& operator=(const CS_REGISTER_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_REGISTER_REQ& default_instance();

  void Swap(CS_REGISTER_REQ* other);

  // implements Message ----------------------------------------------

  inline CS_REGISTER_REQ* New() const { return New(NULL); }

  CS_REGISTER_REQ* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_REGISTER_REQ& from);
  void MergeFrom(const CS_REGISTER_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_REGISTER_REQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_REGISTER_REQ)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Chat_2eproto();
  friend void protobuf_AssignDesc_Chat_2eproto();
  friend void protobuf_ShutdownFile_Chat_2eproto();

  void InitAsDefaultInstance();
  static CS_REGISTER_REQ* default_instance_;
};
// -------------------------------------------------------------------

class SC_REGISTER_RSP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_REGISTER_RSP) */ {
 public:
  SC_REGISTER_RSP();
  virtual ~SC_REGISTER_RSP();

  SC_REGISTER_RSP(const SC_REGISTER_RSP& from);

  inline SC_REGISTER_RSP& operator=(const SC_REGISTER_RSP& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_REGISTER_RSP& default_instance();

  void Swap(SC_REGISTER_RSP* other);

  // implements Message ----------------------------------------------

  inline SC_REGISTER_RSP* New() const { return New(NULL); }

  SC_REGISTER_RSP* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_REGISTER_RSP& from);
  void MergeFrom(const SC_REGISTER_RSP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_REGISTER_RSP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SC_REGISTER_RSP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Chat_2eproto();
  friend void protobuf_AssignDesc_Chat_2eproto();
  friend void protobuf_ShutdownFile_Chat_2eproto();

  void InitAsDefaultInstance();
  static SC_REGISTER_RSP* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_HEART_BEAT_REQ

// -------------------------------------------------------------------

// SC_HEART_BEAT_RSP

// -------------------------------------------------------------------

// CS_LOGIN_REQ

// -------------------------------------------------------------------

// SC_LOGIN_RSP

// -------------------------------------------------------------------

// CS_REGISTER_REQ

// -------------------------------------------------------------------

// SC_REGISTER_RSP

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Message_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Message_ID>() {
  return ::Message_ID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Chat_2eproto__INCLUDED
